disableSerialization; 
_display = _this select 0; 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

((findDisplay 11000) displayCtrl 2800) cbSetChecked OPTRE_HUD_CompassWanted;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Set Radar Mode
if (isNil "OPTRE_Hud_RadarMode2Allowed") then {OPTRE_Hud_RadarMode2Allowed = 2;};
{
	if !((_x select 1) > OPTRE_Hud_RadarMode2Allowed) then {_index = ((findDisplay 11000) displayCtrl 1504) lbAdd (format ["Radar Shows: %1",(_x select 0)]) ; };
} forEach [ ["Group",0], ["Side",1], ["Side & Known Enemy",2] ] ;
((findDisplay 11000) displayCtrl 1504) lbSetCurSel OPTRE_Hud_RadarMode;

// Radar Focus 
_1900_RadarScale_Slider = ((findDisplay 11000) displayCtrl 1900); 
_1900_RadarScale_Slider sliderSetRange [0.01, 0.1];// 0.102599];//0.20593]; 
_1900_RadarScale_Slider sliderSetSpeed [0.01, 0.01];
_1900_RadarScale_Slider sliderSetPosition OPTRE_Hud_RadarScale; 

( (findDisplay 11000) displayCtrl 1003 ) ctrlSetText (format ['Radar Zoom: %1m',round ((OPTRE_Hud_RadarScale / 0.01) * 50)]);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




				
// Set Icon Colour
_hudPict = profileNamespace getVariable ["OPTRE_ODST_HUDColourPict","black"];
{
	 _index = ((findDisplay 11000) displayCtrl 1500) lbAdd (format ["ODST Icon Colour: %1", _x]);
	 ((findDisplay 11000) displayCtrl 1500) lbSetData [_index, _x];
	 if (_x == _hudPict) then { ((findDisplay 11000) displayCtrl 1500) lbSetCurSel _index };
} forEach [
	"black"/*,
	"orange",
	"blue",
	"white",
	"red",
	"green"*/
];	

// Set Text Colour
_hudText = profileNamespace getVariable ["OPTRE_ODST_HUDColourText","black"];
{
    _index = ((findDisplay 11000) displayCtrl 1501) lbAdd (format ["ODST Text Colour: %1", _x]);
	((findDisplay 11000) displayCtrl 1501) lbSetData [_index, _x];
	 if (_x == _hudText) then { ((findDisplay 11000) displayCtrl 1501) lbSetCurSel _index };
} forEach [
	"black"/*,
	"orange",
	"blue",
	"white",
	"red",
	"green"*/
];		

// Set Outline Colour
_hudMain = profileNamespace getVariable ["OPTRE_ODST_HUDColourMain","orange"];
{
	 _index = ((findDisplay 11000) displayCtrl 1502) lbAdd (format ["ODST Outline Colour: %1", _x]);
	 ((findDisplay 11000) displayCtrl 1502) lbSetData [_index, _x];
	 if (_x == _hudMain) then { ((findDisplay 11000) displayCtrl 1502) lbSetCurSel _index };
} forEach [
	"orange",
	"blue",
	"white"
];	

//{((findDisplay 11000) displayCtrl _x) lbSetCurSel 0;} forEach [1500,1501,1502];

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

{
	_index = ((findDisplay 11000) displayCtrl 1503) lbAdd (format ["Left Hand Display Mode: %1",(_x select 0)]) ;
} forEach [
	["Off",0],
	["IFF / Motion Radar",1],
	["Squad Shoulder Cameras",2]
];	
((findDisplay 11000) displayCtrl 1503) lbSetCurSel OPTRE_LHD_Function;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

{
	_index = ((findDisplay 11000) displayCtrl 1505) lbAdd (format ["Should Camera Vein: %1 %2",rank _x, name _x]) ;
} forEach units group player - [player];
((findDisplay 11000) displayCtrl 1505) lbSetCurSel OPTRE_LHD_PIPSel;

{
	_index = ((findDisplay 11000) displayCtrl 1506) lbAdd (format ["Shoulder Camera Mode: %1",(_x select 0)]) ;
} forEach [
	["Normal",0],
	["Night Vision",1],
	["Thermal Vision",2]
];	
((findDisplay 11000) displayCtrl 1506) lbSetCurSel OPTRE_HUD_PIP_NVGTI;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////